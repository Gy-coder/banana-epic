{"version":3,"sources":["components/UpLoader.tsx","components/Tips.tsx","pages/Home.tsx"],"names":["Dragger","Upload","Result","styled","div","H1","h1","Img","img","UpLoader","observer","useStores","ImageStore","UserStore","address","serverFile","attributes","url","store","useLocalObservable","width","height","setWidth","setHeight","getWidth","getHeight","ref1","useRef","ref2","props","beforeUpload","file","setFile","setFileName","name","console","log","currentUser","message","warning","test","size","error","upload","then","success","catch","showUploadList","tip","spinning","isUploading","className","InboxOutlined","target","href","fileName","src","ref","placeholder","onChange","current","value","allAddress","Wrapper","Tips","children","Home"],"mappings":"mNAOQA,EAAYC,IAAZD,QAEFE,EAASC,IAAOC,IAAV,+FAMNC,EAAKF,IAAOG,GAAV,sEAKFC,EAAMJ,IAAOK,IAAV,iDAgIMC,EA5HYC,aAAS,WAAO,IAAD,EACxC,EAAkCC,cAA1BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,UAEdC,EAAe,UAAGF,EAAWG,kBAAd,aAAG,EAAuBC,WAAWC,IAAID,WAAWC,IACnEC,EAAQC,aAAmB,iBAAO,CACtCC,MAAO,GACPC,OAAQ,GACR,eACE,OAAOH,EAAME,MAAN,aAAoBF,EAAME,OAAU,IAE7CE,SANsC,SAM7BF,GACPF,EAAME,MAAQA,GAEhB,gBACE,OAAOF,EAAMG,OAAN,aAAqBH,EAAMG,QAAW,IAE/CE,UAZsC,SAY5BF,GACRH,EAAMG,OAASA,GAEjB,iBAAkB,IAAD,EACf,OAEE,UAAAT,EAAWG,kBAAX,eAAuBC,WAAWC,IAAID,WAAWC,KACjD,gBACAC,EAAMM,SACNN,EAAMO,eAINC,EAAOC,iBAAgC,MACvCC,EAAOD,iBAAgC,MAYvCE,EAAQ,CACZC,aAAc,SAACC,GAIb,OAHAnB,EAAWoB,QAAQD,GACnBnB,EAAWqB,YAAYF,EAAKG,MAC5BC,QAAQC,IAAIL,GACkB,OAA1BlB,EAAUwB,aACZC,IAAQC,QAAQ,qDACT,GAEJ,wCAAwCC,KAAKT,EAAKG,MAInDH,EAAKU,KAAO,SACdH,IAAQI,MAAM,6DACP,IAET9B,EAAW+B,SACRC,MAAK,kBAAMN,IAAQO,QAAQ,+BAC3BC,OAAM,kBAAMR,IAAQI,MAAM,gCACtB,IAVLJ,IAAQI,MAAM,yCACP,IAWXK,gBAAgB,GAElB,OACE,qCACE,cAAC,IAAD,CAAMC,IAAI,wBAASC,SAAUrC,EAAWsC,YAAxC,SACE,eAAClD,EAAD,2BAAa6B,GAAb,cACE,mBAAGsB,UAAU,uBAAb,SACE,cAACC,EAAA,EAAD,MAEF,mBAAGD,UAAU,kBAAb,gFACA,mBAAGA,UAAU,kBAAb,kGAMHvC,EAAWG,WACV,eAACb,EAAD,WACE,cAACG,EAAD,uCACA,+BACE,0DAEA,6BACE,mBAAGgD,OAAO,SAASC,KAAMxC,EAAzB,SACGA,MAGL,oDACA,6BAAKF,EAAW2C,WAChB,0DACA,6BACE,cAAChD,EAAD,CAAKiD,IAAK1C,MAEZ,0DACA,+BACE,uBACE2C,IAAK/B,EACLgC,YAAY,yCACZC,SAtEU,WACtBxB,QAAQC,IAAI,sBACZD,QAAQC,IAAIV,EAAKkC,QAAUlC,EAAKkC,QAAQC,MAAQ,IAChDnC,EAAKkC,SAAW1C,EAAMI,SAASI,EAAKkC,QAAQC,UAqElC,uBACEJ,IAAK7B,EACL8B,YAAY,yCACZC,SArEW,WACvB/B,EAAKgC,SAAW1C,EAAMK,UAAUK,EAAKgC,QAAQC,aAuErC,0DACA,oCAEE,mBAAGR,OAAO,SAASC,KAAMpC,EAAM4C,WAA/B,SACG5C,EAAM4C,aACJ,aAIT,WC1IJC,EAAU5D,IAAOC,IAAV,gIAmBE4D,EAXOtD,aAAS,YAAe,IAAbuD,EAAY,EAAZA,SACxBpD,EAAaF,cAAbE,UACP,OACE,mCAEIA,EAAUwB,YAAc,KAAO,cAAC0B,EAAD,UAAUE,SCZ3CC,EAAiBxD,aAAS,WAC9B,IAAQG,EAAcF,cAAdE,UACR,OACE,qCACGA,EAAUwB,YAAc,6BAAQ,cAAC,EAAD,yDACjC,cAAC,EAAD,UAKS6B","file":"static/js/9.f57c9cf1.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\nimport { observer, useLocalObservable } from \"mobx-react\";\nimport { useStores } from \"../stores\";\nimport { Upload, message, Spin } from \"antd\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport styled from \"styled-components\";\n\nconst { Dragger } = Upload;\n\nconst Result = styled.div`\n  margin-top: 30px;\n  border: 1px dashed #ccc;\n  padding: 20px;\n`;\n\nconst H1 = styled.h1`\n  margin: 20px 0;\n  text-align: center;\n`;\n\nconst Img = styled.img`\n  max-width: 300px;\n`;\n\nconst UpLoader: React.FC = observer(() => {\n  const { ImageStore, UserStore } = useStores();\n  /* @ts-ignore */\n  const address: string = ImageStore.serverFile?.attributes.url.attributes.url;\n  const store = useLocalObservable(() => ({\n    width: \"\",\n    height: \"\",\n    get getWidth() {\n      return store.width ? `/w/${store.width}` : \"\";\n    },\n    setWidth(width: string) {\n      store.width = width;\n    },\n    get getHeight() {\n      return store.height ? `/h/${store.height}` : \"\";\n    },\n    setHeight(height: string) {\n      store.height = height;\n    },\n    get allAddress() {\n      return (\n        /* @ts-ignore */\n        ImageStore.serverFile?.attributes.url.attributes.url +\n        \"?imageView2/0\" +\n        store.getWidth +\n        store.getHeight\n      );\n    },\n  }));\n  const ref1 = useRef<HTMLInputElement | null>(null);\n  const ref2 = useRef<HTMLInputElement | null>(null);\n\n  const bindWidthChange = () => {\n    console.log(\"bindWidthChange...\");\n    console.log(ref1.current ? ref1.current.value : \"\");\n    ref1.current && store.setWidth(ref1.current.value);\n  };\n\n  const bindHeightChange = () => {\n    ref2.current && store.setHeight(ref2.current.value);\n  };\n\n  const props = {\n    beforeUpload: (file: File) => {\n      ImageStore.setFile(file);\n      ImageStore.setFileName(file.name);\n      console.log(file);\n      if (UserStore.currentUser === null) {\n        message.warning(\"请先登录再上传！\");\n        return false;\n      }\n      if (!/(svg$)|(png$)|(jpg$)|(jpeg$)|(gif$)/gi.test(file.name)) {\n        message.error(\"只能上传图片\");\n        return false;\n      }\n      if (file.size > 1024 * 1024) {\n        message.error(\"只能上传最大1M的图片\");\n        return false;\n      }\n      ImageStore.upload()\n        .then(() => message.success(\"上传成功\"))\n        .catch(() => message.error(\"上传失败\"));\n      return false;\n    },\n    showUploadList: false,\n  };\n  return (\n    <>\n      <Spin tip=\"上传中...\" spinning={ImageStore.isUploading}>\n        <Dragger {...props}>\n          <p className=\"ant-upload-drag-icon\">\n            <InboxOutlined />\n          </p>\n          <p className=\"ant-upload-text\">单击或拖动到此区域上传</p>\n          <p className=\"ant-upload-hint\">\n            仅支持1M以下的png,jpg,jpeg,gif格式图片\n          </p>\n        </Dragger>\n      </Spin>\n\n      {ImageStore.serverFile ? (\n        <Result>\n          <H1>上传结果</H1>\n          <dl>\n            <dt>线上地址</dt>\n            {/* @ts-ignore */}\n            <dd>\n              <a target=\"_blank\" href={address}>\n                {address}\n              </a>\n            </dd>\n            <dt>文件名</dt>\n            <dd>{ImageStore.fileName}</dd>\n            <dt>图片预览</dt>\n            <dd>\n              <Img src={address} />\n            </dd>\n            <dt>更改尺寸</dt>\n            <dd>\n              <input\n                ref={ref1}\n                placeholder=\"最大宽度(可选)\"\n                onChange={bindWidthChange}\n              />\n              <input\n                ref={ref2}\n                placeholder=\"最大高度(可选)\"\n                onChange={bindHeightChange}\n              />\n            </dd>\n            <dt>预览地址</dt>\n            <dd>\n              \b\n              <a target=\"_black\" href={store.allAddress}>\n                {store.allAddress}\n              </a>{\" \"}\n            </dd>\n          </dl>\n        </Result>\n      ) : null}\n    </>\n  );\n});\n\nexport default UpLoader;\n","import React from 'react'\nimport {observer} from 'mobx-react'\nimport {useStores} from '../stores';\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  background: orange;\n  padding: 10px;\n  margin: 30px 0;\n  border-radius: 4px;\n  color: white;\n`\n\nconst Tips:React.FC = observer(({children})=>{\n  const {UserStore} = useStores()\n  return (\n    <>\n      {\n        UserStore.currentUser ? null : <Wrapper>{children}</Wrapper>\n      }\n    </>\n  )\n})\n\nexport default Tips","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { useStores } from \"../stores\";\nimport UpLoader from \"../components/UpLoader\";\nimport Tips from \"../components/Tips\";\n\nconst Home: React.FC = observer(() => {\n  const { UserStore } = useStores();\n  return (\n    <>\n      {UserStore.currentUser ? <></> : <Tips>请先登录再上传</Tips>}\n      <UpLoader />\n    </>\n  );\n});\n\nexport default Home;\n"],"sourceRoot":""}