{"version":3,"sources":["pages/Register.tsx"],"names":["Wrapper","styled","div","Title","h1","Register","AuthStore","useStores","histroy","useHistory","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","setUsername","username","setPassword","password","resister","then","push","catch","console","log","onFinishFailed","errorInfo","Item","label","rules","required","message","validator","rule","value","test","Promise","reject","length","resolve","min","max","Password","getFieldValue","offset","type","htmlType"],"mappings":"uLAMMA,EAAUC,IAAOC,IAAV,iKAQPC,EAAQF,IAAOG,GAAV,2EA4FIC,UAvFY,WACzB,IAAQC,EAAcC,cAAdD,UACFE,EAAUC,cAiChB,OACE,eAACT,EAAD,WACE,cAACG,EAAD,2BACA,eAAC,IAAD,CACEO,KAAK,QACLC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpBE,cAAe,CAAEC,UAAU,GAC3BC,SAxCW,SAACC,GAChBX,EAAUY,YAAYD,EAAOE,UAC7Bb,EAAUc,YAAYH,EAAOI,UAC7Bf,EAAUgB,WACPC,MAAK,WACJf,EAAQgB,KAAK,QAEdC,OAAM,WACLC,QAAQC,IAAI,+DAiCZC,eA7BiB,SAACC,GACtBH,QAAQC,IAAI,UAAWE,IAsBrB,UAQE,cAAC,IAAKC,KAAN,CACEC,MAAM,qBACNrB,KAAK,WACLsB,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,kCAC3B,CAAEC,UAhCa,SAACC,EAAWC,GACnC,MAAI,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,4EACxCH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,GAC9BF,QAAQC,OAAO,iDACjBD,QAAQG,aAuBX,SAQE,cAAC,IAAD,MAGF,cAAC,IAAKZ,KAAN,CACEC,MAAM,eACNrB,KAAK,WACLsB,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,4BAC3B,CAAES,IAAK,EAAGT,QAAS,mCACnB,CAAEU,IAAK,GAAIV,QAAS,uDANxB,SASE,cAAC,IAAMW,SAAP,MAGF,cAAC,IAAKf,KAAN,CACEC,MAAM,2BACNrB,KAAK,mBACLsB,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,wCA9CnB,SAAC,GAAuB,IAArBY,EAAoB,EAApBA,cACzB,MAAO,CACLX,UAAW,SAAUC,EAAWC,GAC9B,OAAIS,EAAc,cAAgBT,EAAcE,QAAQG,UACjDH,QAAQC,OAAO,kDAuCtB,SAKE,cAAC,IAAMK,SAAP,MAGF,cAAC,IAAKf,KAAN,CAAWjB,WAAY,CAAEkC,OAAQ,GAAInC,KAAM,IAA3C,SACE,cAAC,IAAD,CAAQoC,KAAK,UAAUC,SAAS,SAAhC","file":"static/js/11.b947b7d6.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Form, Input, Button } from \"antd\";\nimport { useStores } from \"../stores\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Wrapper = styled.div`\n  max-width: 600px;\n  margin: 30px auto;\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n  padding: 20px;\n`;\n\nconst Title = styled.h1`\n  text-align: center;\n  margin-bottom: 30px;\n`;\n\nconst Register: React.FC = () => {\n  const { AuthStore } = useStores();\n  const histroy = useHistory();\n  const onFinish = (values: any) => {\n    AuthStore.setUsername(values.username);\n    AuthStore.setPassword(values.password);\n    AuthStore.resister()\n      .then(() => {\n        histroy.push(\"/\");\n      })\n      .catch(() => {\n        console.log(\"注册失败 什么都不做\");\n      });\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  const validateUsername = (rule: any, value: string) => {\n    if (/\\W/.test(value)) return Promise.reject(\"只能是数字、字母或下划线\");\n    if (value.length < 4 || value.length > 10)\n      return Promise.reject(\"长度为4～10个字符\");\n    return Promise.resolve();\n  };\n  // @ts-ignore\n  const validateConfirm = ({ getFieldValue }) => {\n    return {\n      validator: function (rule: any, value: string) {\n        if (getFieldValue(\"password\") === value) return Promise.resolve();\n        return Promise.reject(\"两次密码不一致\");\n      },\n    };\n  };\n\n  return (\n    <Wrapper>\n      <Title>注册</Title>\n      <Form\n        name=\"basic\"\n        labelCol={{ span: 6 }}\n        wrapperCol={{ span: 18 }}\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item\n          label=\"用户名\"\n          name=\"username\"\n          rules={[\n            { required: true, message: \"输入用户名\" },\n            { validator: validateUsername },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"密码\"\n          name=\"password\"\n          rules={[\n            { required: true, message: \"输入密码\" },\n            { min: 4, message: \"最少4个字符\" },\n            { max: 16, message: \"最多不超过16个字符\" },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item\n          label=\"确认密码\"\n          name=\"confirmPasswordd\"\n          rules={[{ required: true, message: \"再次确认密码\" }, validateConfirm]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item wrapperCol={{ offset: 12, span: 12 }}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            提交\n          </Button>\n        </Form.Item>\n      </Form>\n    </Wrapper>\n  );\n};\n\nexport default Register;\n"],"sourceRoot":""}